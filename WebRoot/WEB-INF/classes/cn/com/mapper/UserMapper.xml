<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="cn.com.domain.User" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="token" property="token" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="reg_time" property="regTime" jdbcType="VARCHAR" />
    <result column="login_num" property="loginNum" jdbcType="INTEGER" />
    <result column="last_time" property="lastTime" jdbcType="VARCHAR" />
    <result column="last_ip" property="lastIp" jdbcType="VARCHAR" />
    <result column="student_card_authentication" property="studentCardAuthentication" jdbcType="INTEGER" />
    <result column="is_close" property="isClose" jdbcType="INTEGER" />
    
    <collection property="publishList" ofType="cn.com.domain.GoodsPublish" column="id">  
            <id column="id" property="id"/>
            <result column="price" property="price"/>  
    </collection> 
    
  </resultMap>
  <sql id="Base_Column_List" >
    id, token, phone, email, nick_name, password, reg_time, login_num, last_time, last_ip, 
    student_card_authentication, is_close
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.com.domain.User" >
    insert into user (id, token, phone, 
      email, nick_name, password, 
      reg_time, login_num, last_time, 
      last_ip, student_card_authentication, is_close
      )
    values (#{id,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{regTime,jdbcType=VARCHAR}, #{loginNum,jdbcType=INTEGER}, #{lastTime,jdbcType=VARCHAR}, 
      #{lastIp,jdbcType=VARCHAR}, #{studentCardAuthentication,jdbcType=INTEGER}, #{isClose,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.com.domain.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="token != null" >
        token,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="regTime != null" >
        reg_time,
      </if>
      <if test="loginNum != null" >
        login_num,
      </if>
      <if test="lastTime != null" >
        last_time,
      </if>
      <if test="lastIp != null" >
        last_ip,
      </if>
      <if test="studentCardAuthentication != null" >
        student_card_authentication,
      </if>
      <if test="isClose != null" >
        is_close,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="token != null" >
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null" >
        #{regTime,jdbcType=VARCHAR},
      </if>
      <if test="loginNum != null" >
        #{loginNum,jdbcType=INTEGER},
      </if>
      <if test="lastTime != null" >
        #{lastTime,jdbcType=VARCHAR},
      </if>
      <if test="lastIp != null" >
        #{lastIp,jdbcType=VARCHAR},
      </if>
      <if test="studentCardAuthentication != null" >
        #{studentCardAuthentication,jdbcType=INTEGER},
      </if>
      <if test="isClose != null" >
        #{isClose,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.domain.User" >
    update user
    <set >
      <if test="token != null" >
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null" >
        reg_time = #{regTime,jdbcType=VARCHAR},
      </if>
      <if test="loginNum != null" >
        login_num = #{loginNum,jdbcType=INTEGER},
      </if>
      <if test="lastTime != null" >
        last_time = #{lastTime,jdbcType=VARCHAR},
      </if>
      <if test="lastIp != null" >
        last_ip = #{lastIp,jdbcType=VARCHAR},
      </if>
      <if test="studentCardAuthentication != null" >
        student_card_authentication = #{studentCardAuthentication,jdbcType=INTEGER},
      </if>
      <if test="isClose != null" >
        is_close = #{isClose,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.domain.User" >
    update user
    set token = #{token,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      reg_time = #{regTime,jdbcType=VARCHAR},
      login_num = #{loginNum,jdbcType=INTEGER},
      last_time = #{lastTime,jdbcType=VARCHAR},
      last_ip = #{lastIp,jdbcType=VARCHAR},
      student_card_authentication = #{studentCardAuthentication,jdbcType=INTEGER},
      is_close = #{isClose,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <select id="selectByAccount" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user
    where email=#{id,jdbcType=VARCHAR} 
    or phone=#{id,jdbcType=VARCHAR}
  </select>
  
  
  
  
</mapper>
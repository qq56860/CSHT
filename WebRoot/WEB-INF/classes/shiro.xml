<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"></bean>

	<!-- 缓存管理 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager"></bean>

	<bean id="jdbcRealm" class="org.apache.shiro.realm.jdbc.JdbcRealm">
	    <!-- 密码加密 -->
		<property name="permissionsLookupEnabled" value="true"></property>
		<property name="dataSource" ref="dataSource"></property>
		<property name="authenticationQuery" value="SELECT passwd password from t_ss_sys_user where user_name=?"></property>
		<property name="userRolesQuery" value="select r.role_code role_name from t_ss_sys_user_role r,t_ss_sys_user u where r.user_id=u.id and u.user_name=?"/>
		<property name="permissionsQuery" value="SELECT menu_id permission_name from t_ss_sys_role_menu where role_code= ?"/>
	</bean>
	
	<bean id="userRealm" class="cn.com.shiro.realm.UserRealm">
		<!-- 匹配密码 -->
		<!-- 数据库保存的密码是使用MD5算法加密的，所以这里需要配置一个密码匹配对象 -->
		<!-- <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.Sha256CredentialsMatcher"></bean> -->
	</bean>
	<bean id="adminRealm" class="cn.com.shiro.realm.AdminRealm">
		<!-- 匹配密码 -->
		<!-- 数据库保存的密码是使用MD5算法加密的，所以这里需要配置一个密码匹配对象 -->
		<!-- <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.Sha256CredentialsMatcher"></bean> -->
	</bean>
	
	 <!--多个realm 的集中管理  -->
    <bean id="defineModularRealmAuthenticator" class="cn.com.shiro.util.DefautModularRealm"> 
        <property name="definedRealms">    
            <map>    
                <entry key="userRealm" value-ref="userRealm" />    
                <entry key="adminRealm" value-ref="adminRealm" />    
            </map>   
        </property>  
        <property name="authenticationStrategy">    
            <bean class="org.apache.shiro.authc.pam.FirstSuccessfulStrategy" />    
        </property> 
    </bean>  
	
	
	<!-- Shiro安全管理器 -->
	<!-- Shiro默认会使用Servlet容器的Session -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- <property name="realm" ref="jdbcRealm"></property> -->
		<property name="authenticator" ref="defineModularRealmAuthenticator" /> 
		<property name="realms"  >
            <list>
               <bean id="userRealm" class="cn.com.shiro.realm.UserRealm" /> 
               <bean id="adminRealm" class="cn.com.shiro.realm.AdminRealm" /> 
            </list>
        </property>
		<property name="cacheManager" ref="cacheManager"></property>
	</bean>
	
	
	
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager"></property>
		<property name="loginUrl" value="/"></property>
		<!-- 用户访问未对其授权的资源时，所显示的连接 -->
		<property name="unauthorizedUrl" value="baidu"></property>
		
		<property name="filterChainDefinitions">
			<value>
				/=anon
				/jsp/user/login_logined.jsp=anon
				/jsp/goods/commentRefresh.jsp=anon
				
				/homePage=anon
				/homePageList=anon
				/user/login=anon
				/user/reg=anon
				/goods/detail=anon
				/buyPage=anon
				
				/user/info=anon
				
				
				/resources/**=anon
				/** = authc
			</value>
		</property>
	</bean>
</beans>